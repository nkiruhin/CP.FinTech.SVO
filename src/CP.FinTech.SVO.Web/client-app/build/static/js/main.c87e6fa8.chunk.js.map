{"version":3,"sources":["authProvider.js","dataProvider.js","components/CustomAppBar.js","components/Menu.js","components/Layout.js","components/ShowContracts.js","resources/users.js","components/Aside.js","configs/rentalArray.js","resources/contracts.js","App.js","reportWebVitals.js","index.js"],"names":["authProvider","login","username","localStorage","setItem","JSON","stringify","Promise","resolve","checkAuth","params","getItem","reject","logout","getPermissions","apiUrl","httpClient","fetchUtils","fetchJson","apiProvider","getList","resource","a","url","response","data","parse","body","total","getMany","getOne","id","create","method","update","delete","deleteMany","useStyles","makeStyles","title","flex","textOverflow","whiteSpace","overflow","spacer","ConfigurationMenu","forwardRef","props","ref","useTranslate","MenuItemLink","to","primaryText","leftIcon","onClick","sidebarIsOpen","CustomUserMenu","UserMenu","CustomAppBar","classes","AppBar","elevation","userMenu","Typography","variant","color","className","theme","root","marginTop","spacing","Menu","dense","useSelector","state","CustomSidebar","Sidebar","size","Layout","appBar","sidebar","menu","ShowContracts","record","useShowController","useQueryWithStore","type","payload","tenantid","loaded","Card","CardContent","Grid","container","item","xs","gutterBottom","align","shortName","Table","TableHead","TableRow","TableCell","rightAlignedCell","TableBody","map","component","Link","rentalObjectId","Date","dateEnd","toLocaleDateString","width","margin","height","invoices","ArendorList","List","perPage","bulkActionButtons","Datagrid","rowClick","expand","TextField","source","label","SelectField","choices","name","EditButton","ArendorEdit","Edit","SimpleForm","Box","minWidth","sm","md","TextInput","fullWidth","SelectInput","ArrayInput","SimpleFormIterator","useAsideStyles","breakpoints","down","display","useEventStyles","stepper","background","border","marginLeft","EventList","basePath","locale","useLocale","Stepper","orientation","date","destination","amount","contract_id","event","Step","expanded","active","completed","StepLabel","StepIconComponent","Component","OrderIcon","fontSize","style","paddingLeft","toLocaleString","weekday","year","month","day","hour","minute","StepContent","Order","NumberField","options","currency","Aside","ContractList","rentals","optionValue","optionText","DateField","ContractEdit","aside","DateInput","NumberInput","ReferenceInput","reference","validate","required","ContractCreate","Create","defaultValue","setFullYear","getFullYear","i18NProvider","polyglotI18nProvider","russianMessages","App","Admin","dataProvider","i18nProvider","layout","Resource","list","edit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c87e6fa8.chunk.js","sourcesContent":["const authProvider = {\r\n  login: ({ username }) => {\r\n    localStorage.setItem(\"auth\", JSON.stringify(username));\r\n    return Promise.resolve();\r\n  },\r\n  checkAuth: ({ params }) => {\r\n    let email = localStorage.getItem(\"auth\");\r\n    if (email) return Promise.resolve();\r\n    else return Promise.reject();\r\n  },\r\n  logout: () => Promise.resolve(),\r\n  getPermissions: params => Promise.resolve(),\r\n};\r\n\r\nexport default authProvider;\r\n","import { fetchUtils } from \"react-admin\";\r\nimport { stringify } from \"query-string\";\r\n\r\nconst apiUrl = \"/api\";\r\nconst httpClient = fetchUtils.fetchJson;\r\nconst jsonArendors = [\r\n  {\r\n    name: \"ООО Переработка остатков крупного рогатого скота\",\r\n    shortName: \" ООО Рога и копыт\",\r\n    address: \"135040, Челябинская область, город Чехов, спуск Косиора, 9\",\r\n    actualAddress: \"217221, Тульская область, город Серпухов, наб. Ленина, 69\",\r\n    contacts: \"+7(555) 562-45-45 rogov@net.biz\",\r\n    inn: \"8452150736\",\r\n    kpp: \"309445806\",\r\n    ogrn: \"9113863442937\",\r\n    orgType: 0,\r\n    walletAddress: [\"asdasdasd\", \"asdasdasdasd32\"],\r\n    id: 1,\r\n  },\r\n  {\r\n    name: \"ООО Переработка остатков2\",\r\n    shortName: \" ООО Рога и копыт\",\r\n    address: \"135040, Челябинская область, город Чехов, спуск Косиора, 9\",\r\n    actualAddress: \"217221, Тульская область, город Серпухов, наб. Ленина, 69\",\r\n    contacts: \"+7(555) 562-45-45 rogov@net.biz\",\r\n    inn: \"8452150736\",\r\n    kpp: \"309445806\",\r\n    ogrn: \"9113863442937\",\r\n    orgType: 1,\r\n    walletAddress: [\"asdasdasd\", \"asdasdasdasd32\"],\r\n    id: 2,\r\n  },\r\n];\r\nconst jsonContracts = [\r\n  {\r\n    dateStart: 1630753052000,\r\n    dateEnd: 1630755252000,\r\n    rentalObjectId: 2,\r\n    ratePerSquareMeter: \"121\",\r\n    walletAddress: \"asdasd\",\r\n    tenant_id: 1,\r\n    id: 1,\r\n  },\r\n  {\r\n    dateStart: 1630753052000,\r\n    dateEnd: 1630755252000,\r\n    rentalObjectId: 1,\r\n    ratePerSquareMeter: \"1212\",\r\n    walletAddress: \"asdasd\",\r\n    tenant_id: 2,\r\n    id: 2,\r\n  },\r\n];\r\nexport const apiProvider = {\r\n  getList: async (resource, params) => {\r\n    const url = `${apiUrl}/${resource}`;\r\n    let response = await httpClient(url);\r\n    let data = JSON.parse(response.body);\r\n    //let response;\r\n    //if (resource == \"tenants\") response = jsonArendors;\r\n    //if (resource == \"contracts\") response = jsonContracts;\r\n    return { data: data, total: 10 };\r\n  },\r\n  getMany: async (resource, params) => {\r\n      const url = `${apiUrl}/${resource}`;\r\n      let response = await httpClient(url);\r\n      let data = JSON.parse(response.body);\r\n      return { data: data };\r\n  },\r\n  getOne: async (resource, params) => {\r\n    let response = await httpClient(`${apiUrl}/${resource}/${params.id}`);\r\n    let data = JSON.parse(response.body);\r\n      return { data: data };\r\n  },\r\n  create: async (resource, params) => {\r\n     let response = await httpClient(`${apiUrl}/${resource}`, {\r\n       method: \"POST\",\r\n       body: JSON.stringify(params.data),\r\n     });\r\n    return { data: { ...params.data, id: 1 } };\r\n  },\r\n  update: async (resource, params) => {\r\n     let response = await httpClient(`${apiUrl}/${resource}/${params.id}`, {\r\n       method: \"PUT\",\r\n       body: JSON.stringify(params.data),\r\n     });\r\n    return { data: { id: 3 } };\r\n  },\r\n  delete: async (resource, params) => {\r\n    // let response = await httpClient(`${apiUrl}/${resource}/${params.id}`, {\r\n    //   method: \"DELETE\",\r\n    // });\r\n    return { data: {} };\r\n  },\r\n  deleteMany: async (resource, params) => {\r\n    // const query = {\r\n    //   filter: JSON.stringify({ id: params.ids }),\r\n    // };\r\n    // let response = await httpClient(\r\n    //   `${apiUrl}/${resource}/${stringify(query)}`,\r\n    //   {\r\n    //     method: \"DELETE\",\r\n    //   }\r\n    // );\r\n    return { data: [{}] };\r\n  },\r\n};\r\n\r\nexport default apiProvider;\r\n","import * as React from 'react';\r\nimport { forwardRef } from 'react';\r\nimport { AppBar, UserMenu, MenuItemLink, useTranslate } from 'react-admin';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        flex: 1,\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n    },\r\n    spacer: {\r\n        flex: 1,\r\n    },\r\n});\r\n\r\nconst ConfigurationMenu = forwardRef((props, ref) => {\r\n    const translate = useTranslate();\r\n    return (\r\n        <MenuItemLink\r\n            ref={ref}\r\n            to=\"/tenant/1\"\r\n            primaryText={\"Мой профиль\"}\r\n            leftIcon={<SettingsIcon />}\r\n            onClick={props.onClick}\r\n            sidebarIsOpen\r\n        />\r\n    );\r\n});\r\n\r\nconst CustomUserMenu = (props) => (\r\n    <UserMenu {...props}>\r\n        <ConfigurationMenu />\r\n    </UserMenu>\r\n);\r\n\r\nconst CustomAppBar = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar {...props} elevation={1} userMenu={<CustomUserMenu />}>\r\n            <Typography\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                className={classes.title}\r\n                id=\"react-admin-title\"\r\n            />\r\n            <span className={classes.spacer} />\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default CustomAppBar;\r\n","import * as React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  MenuItemLink,\r\n} from \"react-admin\";\r\n\r\n\r\n\r\nconst Menu = ({ dense = false }) => {\r\n  useSelector((state) => state.theme); // force rerender on theme change\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MenuItemLink\r\n        to={`/tenant`}\r\n        primaryText={\"Арендаторы\"}\r\n        dense={dense}\r\n        leftIcon={<PeopleIcon />}\r\n        />\r\n        <MenuItemLink\r\n            to={`/contract/create`}\r\n            primaryText={\"Контракты\"}\r\n            dense={dense}\r\n            leftIcon={<BookIcon />}\r\n          />\r\n      </div>\r\n\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default Menu;\r\n","import * as React from \"react\";\r\nimport { Layout, Sidebar } from \"react-admin\";\r\nimport AppBar from \"./CustomAppBar\";\r\nimport Menu from \"./Menu\";\r\n\r\nconst CustomSidebar = (props) => <Sidebar {...props} size={200} />;\r\n\r\nexport default (props) => {\r\n  return (\r\n    <Layout {...props} appBar={AppBar} sidebar={CustomSidebar} menu={Menu} />\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useShowController, Link, useQueryWithStore } from \"react-admin\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShowContracts = (props) => {\r\n  const { record } = useShowController(props);\r\n  const classes = useStyles();\r\n  const { loaded, data } = useQueryWithStore({\r\n    type: \"getList\",\r\n    resource: `contract/${record.id}/byTenant`,\r\n    payload: {\r\n      tenantid: record.tenantid,\r\n    },\r\n  });\r\n  if (!record) return null;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Контракты\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\" gutterBottom align=\"right\">\r\n              Арендатор <br /> \"{record.shortName}\"\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        {loaded ? (\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>ID</TableCell>\r\n                <TableCell className={classes.rightAlignedCell}>\r\n                  ID помещения\r\n                </TableCell>\r\n                <TableCell className={classes.rightAlignedCell}>\r\n                  Дата окончания\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((item) => (\r\n                <TableRow key={item.id} component={Link} to={`/contract/${item.id}`} >\r\n                  <TableCell>\r\n                   {item.id}\r\n                  </TableCell>\r\n                  <TableCell className={classes.rightAlignedCell}>\r\n                    {item.rentalObjectId}\r\n                  </TableCell>\r\n                  <TableCell className={classes.rightAlignedCell}>\r\n                    {new Date(item.dateEnd).toLocaleDateString()}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        ) : (\r\n          \"Загрузка\"\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ShowContracts;\r\n\r\nconst useStyles = makeStyles({\r\n  root: { width: 600, margin: \"auto\" },\r\n  spacer: { height: 20 },\r\n  invoices: { margin: \"10px 0\" },\r\n});\r\n","import * as React from \"react\";\r\nimport {\r\n  List,\r\n  Edit,\r\n  Datagrid,\r\n  TextField,\r\n  EmailField,\r\n  EditButton,\r\n  SimpleFormIterator,\r\n  SimpleForm,\r\n  SelectInput,\r\n  SelectField,\r\n  TextInput,\r\n  ArrayInput,\r\n} from \"react-admin\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\nimport ShowContracts from \"../components/ShowContracts\";\r\n\r\nexport const ArendorList = (props) => (\r\n  <List {...props} title={\"Список Арендаторов\"} perPage={25} bulkActionButtons={false}>\r\n    <Datagrid rowClick=\"expand\" expand={<ShowContracts />}>\r\n      <TextField source=\"id\" label={\"ID\"} />\r\n      <TextField source=\"shortName\" label={\"Название\"} />\r\n      <TextField source=\"address\" label={\"Адрес\"} />\r\n      <TextField source=\"inn\" label={\"Инн\"} />\r\n      <SelectField\r\n        source=\"orgType\"\r\n        label={\"Тип организации\"}\r\n        choices={[\r\n          {\r\n            id: 0,\r\n            name: \"ООО\",\r\n          },\r\n          {\r\n            id: 1,\r\n            name: \"ИП\",\r\n          },\r\n        ]}\r\n      />\r\n      <EditButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\nexport const ArendorEdit = (props) => (\r\n  <Edit {...props}>\r\n    <SimpleForm>\r\n      <Box minWidth={\"100%\"}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={12} md={3}>\r\n            <TextInput label={\"Имя\"} source=\"name\" fullWidth={true} />\r\n            <TextInput label={\"Короткое\"} source=\"contacts\" fullWidth={true} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={3}>\r\n            <TextInput\r\n              label={\"Имя(короткое)\"}\r\n              source=\"shortName\"\r\n              fullWidth={true}\r\n            />\r\n            <SelectInput\r\n              label={\"Тип организации\"}\r\n              fullWidth={true}\r\n              source=\"orgType\"\r\n              choices={[\r\n                {\r\n                  id: 0,\r\n                  name: \"ООО\",\r\n                },\r\n                {\r\n                  id: 1,\r\n                  name: \"ИП\",\r\n                },\r\n              ]}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={3}>\r\n            <TextInput label={\"КПП\"} source=\"kpp\" fullWidth={true} />\r\n            <TextInput label={\"ОГРН\"} source=\"ogrn\" fullWidth={true} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={3}>\r\n            <TextInput label={\"ИНН\"} source=\"inn\" fullWidth={true} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <TextInput label={\"Адрес\"} source=\"address\" fullWidth={true} />\r\n            <TextInput\r\n              label={\"Адрес 2\"}\r\n              source=\"actualAddress\"\r\n              fullWidth={true}\r\n            />\r\n          </Grid>\r\n          <ArrayInput label={\"Платежный счет\"} source=\"walletAddress\" create>\r\n            <SimpleFormIterator>\r\n              <TextInput label={null} />\r\n            </SimpleFormIterator>\r\n          </ArrayInput>\r\n        </Grid>\r\n      </Box>\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n","import * as React from \"react\";\r\nimport {\r\n  NumberField,\r\n  TextField,\r\n  DateField,\r\n  useTranslate,\r\n  useGetList,\r\n  useLocale,\r\n} from \"react-admin\";\r\nimport OrderIcon from \"@material-ui/icons/AttachMoney\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  StepContent,\r\n} from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useAsideStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 400,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Aside = ({ record, basePath }) => {\r\n  const classes = useAsideStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      {record && <EventList record={record} basePath={basePath} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useEventStyles = makeStyles({\r\n  stepper: {\r\n    background: \"none\",\r\n    border: \"none\",\r\n    marginLeft: \"0.3em\",\r\n  },\r\n});\r\n\r\nconst EventList = ({ record, basePath }) => {\r\n  const classes = useEventStyles();\r\n  const locale = useLocale();\r\n\r\n  const events = [\r\n    {\r\n      id: 1,\r\n      date: 1630753052000,\r\n      source: \"asdasddasd\",\r\n      destination: \"asdasdasd\",\r\n      amount: 12312,\r\n      contract_id: 1,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Stepper orientation=\"vertical\" classes={{ root: classes.stepper }}>\r\n        {events.map((event) => (\r\n          <Step key={event.id} expanded active completed>\r\n            <StepLabel\r\n              StepIconComponent={() => {\r\n                const Component = OrderIcon;\r\n                return (\r\n                  <Component\r\n                    fontSize=\"small\"\r\n                    color=\"disabled\"\r\n                    style={{ paddingLeft: 3 }}\r\n                  />\r\n                );\r\n              }}\r\n            >\r\n              {new Date(event.date).toLocaleString(locale, {\r\n                weekday: \"long\",\r\n                year: \"numeric\",\r\n                month: \"short\",\r\n                day: \"numeric\",\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n              })}\r\n            </StepLabel>\r\n            <StepContent>\r\n              <Order\r\n                record={event}\r\n                key={`event_${event.id}`}\r\n                basePath={basePath}\r\n              />\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Order = ({ record, basePath }) => {\r\n  return record ? (\r\n    <>\r\n      <Typography variant=\"body2\" color=\"textSecondary\">\r\n        <NumberField\r\n          source=\"amount\"\r\n          options={{\r\n            style: \"currency\",\r\n            currency: \"RUB\",\r\n          }}\r\n          record={record}\r\n          basePath={basePath}\r\n        />\r\n        <br />\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"body2\">Счет списания</Typography>\r\n            <TextField source=\"source\" record={record} basePath={basePath} />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"body2\">Счет зачисления</Typography>\r\n            <TextField\r\n              source=\"destination\"\r\n              record={record}\r\n              basePath={basePath}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Typography>\r\n    </>\r\n  ) : null;\r\n};\r\n\r\nexport default Aside;\r\n","export default [\r\n  {\r\n    id: 1,\r\n    name: \"Первая\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Вторая\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Третья\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Четвертая\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Пятая\",\r\n  },\r\n];\r\n","import * as React from \"react\";\r\nimport {\r\n  List,\r\n  Edit,\r\n  Datagrid,\r\n  TextField,\r\n  EditButton,\r\n  DateInput,\r\n  SimpleForm,\r\n  SelectField,\r\n  TextInput,\r\n  ReferenceInput,\r\n  DateField,\r\n  SelectInput,\r\n  NumberInput,\r\n  required,\r\n  Create,\r\n} from \"react-admin\";\r\nimport Aside from '../components/Aside';\r\nimport rentals from \"../configs/rentalArray\";\r\nimport { Grid, Box } from \"@material-ui/core\";\r\n\r\nexport const ContractList = (props) => (\r\n  <List\r\n    {...props}\r\n    title={\"Список Контрактов\"}\r\n    perPage={25}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid rowClick=\"edit\">\r\n      <TextField label={\"ID\"} source=\"id\" />\r\n      <SelectField\r\n        label={\"Помещение\"}\r\n        source=\"rentalObjectId\"\r\n        choices={rentals}\r\n        optionValue={\"id\"}\r\n        optionText={\"name\"}\r\n      />\r\n      <DateField label={\"Дата окончания\"} source={\"dateEnd\"} />\r\n\r\n      <EditButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\nexport const ContractEdit = (props) => (\r\n  <Edit {...props} aside={<Aside />} component=\"div\">\r\n    <SimpleForm>\r\n      <Box minWidth={\"100%\"}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={12} md={4}>\r\n            <DateInput\r\n              label={\"Дата договора\"}\r\n              source=\"dateStart\"\r\n              fullWidth={true}\r\n            />\r\n            <DateInput\r\n              label={\"Дата окончания\"}\r\n              source=\"dateEnd\"\r\n              fullWidth={true}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={4}>\r\n            <SelectInput\r\n              label={\"Помещение\"}\r\n              source=\"rentalObjectId\"\r\n              choices={rentals}\r\n              fullWidth={true}\r\n            />\r\n            <NumberInput\r\n              label={\"Ставка за кв.м\"}\r\n              source=\"ratePerSquareMeter\"\r\n              fullWidth={true}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={4}>\r\n            <TextInput fullWidth={true} label={\"Платежный счет\"} source=\"walletAddress\" />\r\n            <ReferenceInput\r\n              label=\"Арендатор\"\r\n              source=\"tenantId\"\r\n              reference=\"tenant\"\r\n              basePath={\"/tenant\"}\r\n              validate={[required()]}\r\n            >\r\n              <SelectInput optionText=\"name\" fullWidth={true} />\r\n            </ReferenceInput>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\nexport const ContractCreate = (props) => (\r\n    <Create {...props}  >\r\n        <SimpleForm>\r\n            <Box minWidth={\"100%\"}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <DateInput\r\n                            label={\"Дата договора\"}\r\n                            source=\"dateStart\"\r\n                            fullWidth={true}\r\n                            defaultValue={new Date()}\r\n                        />\r\n                        <DateInput\r\n                            label={\"Дата окончания\"}\r\n                            source=\"dateEnd\"\r\n                            fullWidth={true}\r\n                            defaultValue={new Date().setFullYear(new Date().getFullYear() + 1)}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <SelectInput\r\n                            label={\"Помещение\"}\r\n                            source=\"rentalObjectId\"\r\n                            choices={rentals}\r\n                            fullWidth={true}\r\n                        />\r\n                        <NumberInput\r\n                            label={\"Ставка за кв.м\"}\r\n                            source=\"ratePerSquareMeter\"\r\n                            fullWidth={true}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={4}>\r\n                        <TextInput fullWidth={true} label={\"Платежный счет\"} source=\"walletAddress\" />\r\n                        <ReferenceInput\r\n                            label=\"Арендатор\"\r\n                            source=\"tenantId\"\r\n                            reference=\"tenant\"\r\n                            basePath={\"/tenant\"}\r\n                            validate={[required()]}\r\n                        >\r\n                            <SelectInput optionText=\"name\" fullWidth={true} />\r\n                        </ReferenceInput>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </SimpleForm>\r\n    </Create>\r\n);\r\n","import * as React from \"react\";\r\nimport { Admin, Resource } from \"react-admin\";\r\n// import jsonServerProvider from \"ra-data-json-server\";\r\nimport polyglotI18nProvider from \"ra-i18n-polyglot\";\r\nimport russianMessages from \"ra-language-russian\";\r\nimport authProvider from \"./authProvider\";\r\nimport dataProvider from \"./dataProvider\";\r\nimport Layout from \"./components/Layout\";\r\nimport { ArendorEdit, ArendorList } from \"./resources/users\";\r\nimport { ContractCreate, ContractList, ContractEdit } from \"./resources/contracts\";\r\n// const dataProvider = jsonServerProvider(\"https://jsonplaceholder.typicode.com\");\r\nconst i18NProvider = polyglotI18nProvider(() => russianMessages, \"ru\");\r\n\r\nfunction App() {\r\n  return (\r\n    <Admin\r\n      dataProvider={dataProvider}\r\n      authProvider={authProvider}\r\n      i18nProvider={i18NProvider}\r\n      layout={Layout}\r\n    >\r\n      <Resource\r\n        name=\"tenant\"\r\n        options={{ label: \"Арендаторы\" }}\r\n        list={ArendorList}\r\n        edit={ArendorEdit}\r\n      />\r\n      <Resource\r\n        name=\"contract\"\r\n        options={{ label: \"Контракты\" }}\r\n        list={ContractList}\r\n        edit={ContractEdit}\r\n        create={ContractCreate}\r\n      />\r\n    </Admin>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}